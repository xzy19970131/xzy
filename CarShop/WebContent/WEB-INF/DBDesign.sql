
/* Drop Tables */

DROP TABLE BLOGREPLY;
DROP TABLE BLOG;
DROP TABLE CARDETAIL;
DROP TABLE CARIMAGE;
DROP TABLE CUSTOMER;
DROP TABLE CAR;
DROP TABLE NEW;
DROP TABLE EMPLOYEE;
DROP TABLE KOWNLEGE;
DROP TABLE USER;




/* Create Tables */

CREATE TABLE BLOG
(
	BLOGID INT NOT NULL AUTO_INCREMENT,
	TITLE VARCHAR(200) NOT NULL,
	CONTENT TEXT,
	FABUSHIJIAN VARCHAR(20) NOT NULL,
	YUEDULIANG INT,
	PEITU VARCHAR(200),
	TAGS VARCHAR(20),
	USERID INT NOT NULL,
	PRIMARY KEY (BLOGID)
);


CREATE TABLE BLOGREPLY
(
	REPLYID INT NOT NULL AUTO_INCREMENT,
	CONTENT VARCHAR(2000) NOT NULL,
	FABUSHIJIAN VARCHAR(20) NOT NULL,
	REPLYUSERID INT NOT NULL,
	REPLYBLOGID INT NOT NULL,
	REPLYFORREPLYID INT NOT NULL,
	PRIMARY KEY (REPLYID)
);


CREATE TABLE CAR
(
	CARID INT NOT NULL AUTO_INCREMENT,
	PINPAIMING VARCHAR(20) NOT NULL,
	XILIE VARCHAR(20),
	SHOUJIA FLOAT NOT NULL,
	GOUMAISHIJIAN VARCHAR(20) NOT NULL,
	GONGLISHU INT NOT NULL,
	PAILIANG VARCHAR(10) NOT NULL,
	QICHESHOUTU VARCHAR(200),
	MIAOSHU TEXT,
	ZHUANGTAI INT DEFAULT 0,
	CHELIANGLEIXING VARCHAR(20) NOT NULL,
	BIANSUXIANG VARCHAR(20),
	DIJISHOU INT,
	SHIPIN VARCHAR(200),
	RANLIAOLEIXING VARCHAR(20),
	SHIFOUTUIGUANG BIT DEFAULT 0,
	PRIMARY KEY (CARID)
);


CREATE TABLE CARDETAIL
(
	CARID INT NOT NULL UNIQUE,
	QUDONGLEIXING VARCHAR(20),
	CHESHENYANSE VARCHAR(20),
	QIGANGSHULIANG VARCHAR(0),
	QIGANGBUJU VARCHAR(20),
	ZUOWEISHULIANG INT,
	XUANGUALEIXING VARCHAR(20),
	QINANGSHULIANG INT,
	YOUXIANGRONGJI INT,
	CHESHENCHANGDU INT,
	ZHOUJU INT,
	LUNTAICHICUN INT,
	HOUBEIXIANGRONGJI INT,
	ZHUANXIANGFUZHU VARCHAR(20),
	DAOCHELEIDA BIT,
	LIDIJIANXI INT,
	YOUHAO FLOAT,
	PRIMARY KEY (CARID)
);


CREATE TABLE CARIMAGE
(
	IMAGEID INT NOT NULL AUTO_INCREMENT,
	CARID INT,
	IMAGEPATH VARCHAR(200),
	PRIMARY KEY (IMAGEID)
);


CREATE TABLE CUSTOMER
(
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(20),
	EMAIL VARCHAR(50),
	TEL VARCHAR(20),
	LIUYAN VARCHAR(2000),
	CARID INT UNIQUE,
	PRIMARY KEY (ID)
);


CREATE TABLE EMPLOYEE
(
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(20) NOT NULL,
	SEX BIT,
	AGE INT,
	IMAGE VARCHAR(200),
	OFFICETEL VARCHAR(20),
	MOBILE VARCHAR(20),
	FAX VARCHAR(20),
	EMAIL VARCHAR(50),
	JOB VARCHAR(20) NOT NULL,
	JIANJIE VARCHAR(200),
	PRIMARY KEY (ID)
);


CREATE TABLE KOWNLEGE
(
	ID INT NOT NULL AUTO_INCREMENT,
	TITLE VARCHAR(200) NOT NULL,
	CONTENT TEXT,
	FABUSHIJIAN VARCHAR(20),
	PRIMARY KEY (ID)
);


CREATE TABLE NEW
(
	NEWID INT NOT NULL AUTO_INCREMENT,
	BIAOTI VARCHAR(200) NOT NULL,
	NEIRONG TEXT NOT NULL,
	FABUSHIJIAN VARCHAR(20) NOT NULL,
	FABUREN VARCHAR(20),
	XINWENPEITU VARCHAR(200),
	YUEDULIANG INT,
	USERID INT NOT NULL,
	PRIMARY KEY (NEWID)
);


CREATE TABLE USER
(
	USERID INT NOT NULL AUTO_INCREMENT,
	USERNAME VARCHAR(20) NOT NULL,
	PASSWORD VARCHAR(200) NOT NULL,
	NICKNAME VARCHAR(20) NOT NULL,
	SEX BIT,
	AGE INT,
	IMAGE VARCHAR(200),
	JOB VARCHAR(20),
	JIALING INT,
	EMAIL VARCHAR(50),
	TEL VARCHAR(20),
	JIANJIE VARCHAR(2000),
	PRIMARY KEY (USERID)
);



/* Create Foreign Keys */

ALTER TABLE BLOGREPLY
	ADD FOREIGN KEY (REPLYBLOGID)
	REFERENCES BLOG (BLOGID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BLOGREPLY
	ADD FOREIGN KEY (REPLYFORREPLYID)
	REFERENCES BLOGREPLY (REPLYID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CARDETAIL
	ADD FOREIGN KEY (CARID)
	REFERENCES CAR (CARID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CARIMAGE
	ADD FOREIGN KEY (CARID)
	REFERENCES CAR (CARID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CUSTOMER
	ADD FOREIGN KEY (CARID)
	REFERENCES CAR (CARID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NEW
	ADD FOREIGN KEY (USERID)
	REFERENCES EMPLOYEE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BLOG
	ADD FOREIGN KEY (USERID)
	REFERENCES USER (USERID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BLOGREPLY
	ADD FOREIGN KEY (REPLYUSERID)
	REFERENCES USER (USERID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



